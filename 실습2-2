#include <DHT.h>
#include <DHT_U.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

#define DHTPIN A0 //실습 2-2에서 선 정리를 위해 온도센서 핀 변경
#define DHTTYPE DHT11

//실습2-2 추가 시작
#define CLOCK_PIN A3  // 클럭 핀을 아날로그 핀 A1에 연결
#define LATCH_PIN A2  // 래치 핀을 아날로그 핀 A2에 연결
int dataPin = 1; //Pin connected to DS of 74HC595
//실습2-2 추가 끝
DHT dht(DHTPIN, DHTTYPE);

//Set anode interface
int a = 3;
int b = 7;
int c = 10;
int d = 12;
int e = 13;
int f = 4;
int g = 9;
int p = 11;    //The decimal point

//Set DIG1, DIG2, DIG3, DIG4
int d1 = 2; //Thousand
int d2 = 5; //Hundred
int d3 = 6; //Ten
int d4 = 8;//One

int val4 = 0;  // DIG1 용 변수
int val3 = 0;  // DIG2 용 변수
int val2 = 0;  // DIG3 용 변수
int val1 = 0;  // DIG4 용 변수

const int DELAY = 1000;  // led display delay
int val = 0;
int temp = NULL;
int prevTime = 0; //실습3 추가
int digitpin[5] = { -1, d4, d3, d2, d1 };

#define _0 {    LOW, LOW, LOW, LOW, LOW, LOW, HIGH }
#define _1 {    HIGH, LOW, LOW, HIGH, HIGH, HIGH, HIGH }
#define _2 {    LOW, LOW, HIGH, LOW, LOW, HIGH, LOW }
#define _3 {    LOW, LOW, LOW, LOW, HIGH, HIGH, LOW }
#define _4 {    HIGH, LOW, LOW, HIGH, HIGH, LOW, LOW }
#define _5 {    LOW, HIGH, LOW, LOW, HIGH, LOW, LOW }
#define _6 {    LOW, HIGH, LOW, LOW, LOW, LOW, LOW }
#define _7 {    LOW, LOW, LOW, HIGH, HIGH, HIGH, HIGH }
#define _8 {    LOW, LOW, LOW, LOW, LOW, LOW, LOW }
#define _9 {    LOW, LOW, LOW, LOW, HIGH, LOW, LOW }
int num_bit[10][7] = { _0, _1, _2, _3, _4, _5, _6, _7, _8,_9 };

//  LCD part, Set the LCD address to 0x27 for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2);


void setup(){
  Serial.begin(9600);
  // initialize the LCD
  lcd.begin();

  pinMode(dataPin, OUTPUT);
  pinMode(CLOCK_PIN, OUTPUT);
  pinMode(LATCH_PIN, OUTPUT);

  pinMode(d1, OUTPUT);
	pinMode(d2, OUTPUT);
	pinMode(d3, OUTPUT);
	pinMode(d4, OUTPUT);
	pinMode(a, OUTPUT);
	pinMode(b, OUTPUT);
	pinMode(c, OUTPUT);
	pinMode(d, OUTPUT);
	pinMode(e, OUTPUT);
	pinMode(f, OUTPUT);
	pinMode(g, OUTPUT);
	pinMode(p, OUTPUT);
  
	// Turn on the blacklight and print a message.
	lcd.backlight();
	lcd.print("Hello, world!");
}
void loop(){
  int currTime = millis();
  if(currTime - prevTime >= 1000){
    temp = getTemp();
    prevTime = currTime;
  }
 if(temp != NULL){
  showLEDs(temp);
 }
}
int getTemp(){
  int h = dht.readHumidity();
  int t = dht.readTemperature();
  if(h != 0){
    Serial.print("temperature: ");
    Serial.println(t);
    return t;
  }
  return NULL;
}
void showLEDs(int value){
  	val = value < 0 ? value * -1 : value;
    val4 = (val / 1000) % 10;
    val3 = (val / 100) % 10;
    val2 = (val / 10) % 10;
    val1 = val % 10;
    if (val >= 1000) {	// 천의 자리
      clearLEDs();
      pickDigit(4);
      pickNumber(val4);
      delayMicroseconds(DELAY);
    }
    if (val >= 100) 	{	// 백의 자리
      clearLEDs();
      pickDigit(3);
      pickNumber(val3);
      delayMicroseconds(DELAY);
    }
    if (val >= 10) {		// 십의 자리
      clearLEDs();
      pickDigit(2);
      pickNumber(val2);
      delayMicroseconds(DELAY);
    }
      if (val >= 0) {		// 일의 자리
      clearLEDs();
      pickDigit(1);
      pickNumber(val1);
      delayMicroseconds(DELAY);
	}
} 

void pickDigit(int x) {
  digitalWrite(d1, LOW);
  digitalWrite(d2, LOW);
  digitalWrite(d3, LOW);
  digitalWrite(d4, LOW);
  digitalWrite(digitpin[x], HIGH);
}

void pickNumber(int n) {
	digitalWrite(a, num_bit[n][0]);
	digitalWrite(b, num_bit[n][1]);
	digitalWrite(c, num_bit[n][2]);
	digitalWrite(d, num_bit[n][3]);
	digitalWrite(e, num_bit[n][4]);
	digitalWrite(f, num_bit[n][5]);
	digitalWrite(g, num_bit[n][6]);
}
void clearLEDs() {
	digitalWrite(a, HIGH);
	digitalWrite(b, HIGH);
	digitalWrite(c, HIGH);
	digitalWrite(d, HIGH);
	digitalWrite(e, HIGH);
	digitalWrite(f, HIGH);
	digitalWrite(g, HIGH);
	digitalWrite(p, HIGH);
}

void dpoint() //Light the decimal point
{
	digitalWrite(p, LOW);
}

void expansion_control(int expansionData) {
  digitalWrite(LATCH_PIN, LOW);
  shiftOut(dataPin, CLOCK_PIN, LSBFIRST, expansionData);  
  //return the latch pin high to signal chip that it
  //no longer needs to listen for information
  digitalWrite(LATCH_PIN, HIGH);
}


