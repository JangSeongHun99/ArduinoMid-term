#include <DHT.h>
#include <DHT_U.h>
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

#define DHTPIN A0
#define DHTTYPE DHT11

#define CLOCK_PIN A3  // 클럭 핀을 아날로그 핀 A1에 연결
#define LATCH_PIN A2  // 래치 핀을 아날로그 핀 A2에 연결
int dataPin = 3; //Pin connected to DS of 74HC595

DHT dht(DHTPIN, DHTTYPE);

//a,b,c,d,e,f,g 상태값  (74HC595 이후 수정)
byte segValue[10] = {
  0b00000011, //
  0b10011111, //1
  0b00100101, //2
  0b00001101, //3
  0b10011001, //4
  0b01001001, //5
  0b01000001, //6 
  0b00011111, //7 
  0b00000001, //8 
  0b00001001, //9 
};
byte digitPin[4] = { 2, 5, 6, 8 }; //segment 위치 핀
//Set DIG1, DIG2, DIG3, DIG4
int d1 = 2;  // Thousand
int d2 = 5; // Hundred
int d3 = 6; //이전 핀번호(6) Ten
int d4 = 8;//이전 핀번호 (8) One

int val4 = 0;  // DIG1 용 변수
int val3 = 0;  // DIG2 용 변수
int val2 = 0;  // DIG3 용 변수
int val1 = 0;  // DIG4 용 변수

const int DELAY = 300;  // led display delay
int val = 0;
int temp = NULL;
int prevTemp = NULL;
int prevTime = 0; //실습3 추가

//  LCD part, Set the LCD address to 0x27 for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2);


void setup(){
  Serial.begin(9600);
  // initialize the LCD
  lcd.begin();

  pinMode(dataPin, OUTPUT);
  pinMode(CLOCK_PIN, OUTPUT);
  pinMode(LATCH_PIN, OUTPUT);

  for (int j = 0; j < 4; j++) {
    pinMode(digitPin[j], OUTPUT);
    digitalWrite(digitPin[j], LOW); // 초기화 시 모든 자릿수를 꺼둡니다
  }
  
	// Turn on the blacklight and print a message.
	lcd.backlight();
	lcd.print("Hello, world!");
}
void loop(){
  int currTime = millis();
  if(currTime - prevTime >= 1000){
    temp = getTemp();
    prevTime = currTime;
  }
 if(temp != NULL && temp != prevTemp) prevTemp = temp;
 if(prevTemp != NULL) showLEDs(prevTemp);
 
}
int getTemp(){
  int h = dht.readHumidity();
  int t = dht.readTemperature();
  if(h != 0){
    Serial.print("temperature: ");
    Serial.println(t);
    return t;
  }
  return NULL;
}
void showLEDs(int value){
  	val = value < 0 ? value * -1 : value;
    val4 = (val / 1000) % 10;
    val3 = (val / 100) % 10;
    val2 = (val / 10) % 10;
    val1 = val % 10;
    if (val >= 1000) {	// 천의 자리
      segOutput(0,val4,0);

    }
    if (val >= 100) 	{	// 백의 자리
      segOutput(1,val3,0);
    }
    if (val >= 10) {		// 십의 자리
      segOutput(2,val2,0);

    }
      if (val >= 0) {		// 일의 자리
      segOutput(3,val1,0);

	}
} 

void segOutput(int d, int Number, int dp)
{
    clearLEDs();
    digitalWrite(digitPin[d], HIGH);
    digitalWrite(LATCH_PIN, LOW);
    shiftOut(dataPin, CLOCK_PIN, LSBFIRST, segValue[Number]);
    digitalWrite(LATCH_PIN, HIGH);    
    delayMicroseconds(500);
    digitalWrite(digitPin[d], LOW);
}
void clearLEDs() {
    digitalWrite(LATCH_PIN, LOW);
    shiftOut(dataPin, CLOCK_PIN, LSBFIRST, 0b11111111);
    digitalWrite(LATCH_PIN, HIGH);      
}


void expansion_control(int expansionData) {
  digitalWrite(LATCH_PIN, LOW);
  shiftOut(dataPin, CLOCK_PIN, LSBFIRST, expansionData);  
  //return the latch pin high to signal chip that it
  //no longer needs to listen for information
  digitalWrite(LATCH_PIN, HIGH);
}


