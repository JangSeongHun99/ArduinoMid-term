#include "DHT.h"
#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

#define DHTPIN A0
#define DHTTYPE DHT11

#define CLOCK_PIN A3  // 클럭 핀을 아날로그 핀 A1에 연결
#define LATCH_PIN A2  // 래치 핀을 아날로그 핀 A2에 연결

#define TRIG 13
#define ECHO 12
#define RED 11
#define GREEN 10
#define BLUE 9

int dataPin = 3; //Pin connected to DS of 74HC595

DHT dht(DHTPIN, DHTTYPE);

//a,b,c,d,e,f,g 상태값  (74HC595 이후 수정)
byte segValue[10] = {
  0b00000011, //
  0b10011111, //1
  0b00100101, //2
  0b00001101, //3
  0b10011001, //4
  0b01001001, //5
  0b01000001, //6 
  0b00011111, //7 
  0b00000001, //8 
  0b00001001, //9 
};
byte digitPin[4] = { 2, 5, 6, 8 }; //segment 위치 핀

int val4 = 0;  // DIG1 용 변수
int val3 = 0;  // DIG2 용 변수
int val2 = 0;  // DIG3 용 변수
int val1 = 0;  // DIG4 용 변수

int val = 0;
int temp = NULL;
int prevTemp = NULL;
int prevTime = 0; //실습1-3 추가

int CDS = A1;
int LED = 7;

long distance = 0;
int cdsVal = 0;

//  LCD part, Set the LCD address to 0x27 for a 16 chars and 2 line display
LiquidCrystal_I2C lcd(0x27, 16, 2);


void setup(){
  Serial.begin(9600);
  dht.begin();
  // initialize the LCD
  lcd.begin();

  //74HC595
  pinMode(dataPin, OUTPUT);
  pinMode(CLOCK_PIN, OUTPUT);
  pinMode(LATCH_PIN, OUTPUT);

  //7세그먼트
  for (int j = 0; j < 4; j++) {
    pinMode(digitPin[j], OUTPUT);
    digitalWrite(digitPin[j], LOW); // 초기화 시 모든 자릿수를 꺼둡니다
  }
    //초음파센서
  pinMode(TRIG, OUTPUT);
  pinMode(ECHO, INPUT);

  pinMode(CDS, INPUT);
  pinMode(LED,OUTPUT);
  
	// Turn on the blacklight and print a message.
	lcd.backlight();
	//lcd.print("Hello, World!");
}
void loop(){
  int currTime = millis();
  if(currTime - prevTime >= 1000){
    temp = getTemp();
    cdsSensor();
    lcdDisplay(distance, cdsVal);
    prevTime = currTime;
  }
  if(temp != NULL && temp != prevTemp) prevTemp = temp;
  if(prevTemp != NULL) showLEDs(prevTemp);
  microsonicSensor();
  
}
int getTemp(){
  int h = dht.readHumidity();
  int t = dht.readTemperature();
  if(h != 0){
    Serial.print("temperature: ");
    Serial.println(t);
    return t;
  }
  return NULL;
}
void showLEDs(int value){
  	val = value < 0 ? value * -1 : value;
    val4 = (val / 1000) % 10;
    val3 = (val / 100) % 10;
    val2 = (val / 10) % 10;
    val1 = val % 10;
    if (val >= 1000) {	// 천의 자리
      segOutput(0,val4,0);

    }
    if (val >= 100) 	{	// 백의 자리
      segOutput(1,val3,0);
    }
    if (val >= 10) {		// 십의 자리
      segOutput(2,val2,0);

    }
      if (val >= 0) {		// 일의 자리
      segOutput(3,val1,0);

	}
} 

void segOutput(int d, int Number, int dp)
{
    clearLEDs();
    digitalWrite(digitPin[d], HIGH);
    digitalWrite(LATCH_PIN, LOW);
    shiftOut(dataPin, CLOCK_PIN, LSBFIRST, segValue[Number]);
    digitalWrite(LATCH_PIN, HIGH);    
    delayMicroseconds(1000);
    digitalWrite(digitPin[d], LOW);
}
void clearLEDs() {
    digitalWrite(LATCH_PIN, LOW);
    shiftOut(dataPin, CLOCK_PIN, LSBFIRST, 0b11111111);
    digitalWrite(LATCH_PIN, HIGH);      
}

void microsonicSensor(){
  // 초음파센서의 Trig에서 초음파를 발사
  digitalWrite(TRIG, LOW);
  delayMicroseconds(2);
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(10);
  digitalWrite(TRIG, LOW);
    // pulseIn명령어를 통해 Echo핀에 초음파가 들어오는 시간을 계산합니다.
  // pulseIn에서 반환된 값에 58.2를 나눈 이유는 시간을 cm로 변경하기 위해서입니다.
  int dis1 = pulseIn(ECHO, HIGH,20000) / 58.2;
  if(dis1 == 0) return;
  // 삼색 LED의 R, G, B를 모두 0으로 설정해서 끕니다. : Common Anode형 삼색 LED 일 경우
  distance = dis1;
  analogWrite(RED, 255);
  analogWrite(GREEN, 255);
  analogWrite(BLUE, 255);
  if(distance < 10)	
    analogWrite(RED, 0);		// 거리가 10cm 이내이면 빨간색으로 표시
  else if(distance < 20)
    analogWrite(GREEN, 0);		// 거리가 10 ~ 20 이내이면 초록색으로 표시
  else if(distance < 30)
    analogWrite(BLUE, 0);		// 거리가 20 ~ 30 이내이면 파란색으로 표시
  
}

void cdsSensor(){
  cdsVal = analogRead(CDS);
  if(cdsVal > 300) {
    digitalWrite(LED, LOW);
  }
  else {
    digitalWrite(LED, HIGH);
  }
}

void lcdDisplay(int distance, int light) {
  lcd.clear();
  
  // 초음파 거리 값 표시 (우측 정렬)
  lcd.setCursor(0, 0);
  lcd.print(distance);
  lcd.print("cm");

  // 조도 값 표시 (우측 정렬)
  lcd.setCursor(0, 1);
  lcd.print(light);
}
